version: 2.1

commands:
  install_golangci-lint:
    description: "Install golangci-lint"
    parameters:
      version:
        type: string
        default: "v1.15.0"
      sudo:
        type: boolean
        default: false
      insecure:
        type: boolean
        default: false
    steps:
      - retry/install:
          sudo: << parameters.sudo >>
          insecure: << parameters.insecure >>
      - run:
          name: "Installing golangci-lint"
          command: |
            . ~/.profile
            command -v golangci-lint ^>/dev/null || (
              cd
              dl --insecure="<< parameters.insecure >>" -o - https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | retry -m 3 sh -s << parameters.version >>
              echo "export PATH=~/bin:$PATH" >> $BASH_ENV
            )
            PATH=${HOME}/bin golangci-lint --version

  install_curl:
    description: "Install curl (if missing)"
    steps:
      - run:
          name: installing curl
          command: |
            command -v curl &>/dev/null || (
              apk add --no-cache curl || (apt update && apt install curl)
            )
            curl --version

  test:
    description: "Internal: testing the orb."
    parameters:
      sudo:
        type: boolean
        default: false
      insecure:
        type: boolean
        default: false
    steps:
      - install_golangci-lint:
          sudo: << parameters.sudo >>
          insecure: << parameters.insecure >>
      - run: retry --version
      - run: . ~/.profile && golangci-lint --version

  mod-download:
    description: |
      Restore and update the Go module cache (adapted from gotest/tools)
    parameters:
      prefix:
        type: string
        default: go-mod-v1
        description: Prefix for the cache key.
      path:
        type: string
        default: /go/pkg/mod
        description: Path to the go module directory to store in the cache.
    steps:
      - restore_cache:
          name: Restore go module cache
          keys:
            - '<< parameters.prefix >>-{{ arch }}-{{ checksum "go.sum" }}'
            #- '<< parameters.prefix >>-{{ arch }}-'
      - run:
          environment:
            GO111MODULE: 'on'
          command: go mod download
      - save_cache:
          name: Save go module cache
          key: '<< parameters.prefix >>-{{ arch }}-{{ checksum "go.sum" }}'
          paths:
            - << parameters.path >>

executors:
  golang:
    docker:
      - image: circleci/golang:<< parameters.tag >>
    working_directory: /go/src/<< parameters.gopkg >>
    environment:
      - CGO_ENABLED: << parameters.cgo-enabled >>
      - GO111MODULE: << parameters.go111module >>
    parameters:
      tag:
        type: string
        default: '1.13'
        description: See https://hub.docker.com/r/circleci/golang/tags
      cgo-enabled:
        type: string
        default: '1'
      go111module:
        type: enum
        enum: ["on", "off", "auto"]
        default: "on"
      gopkg:
        type: string
  docker:
    docker:
      - image: docker:<< parameters.tag >>
    parameters:
      tag:
        type: string
        default: 18.06.3-ce-git
        description: "See https://hub.docker.com/_/docker?tab=tags"

jobs:
  # exposed
  golang-build:
    executor:
      name: golang
      tag: << parameters.tag >>
      cgo-enabled: << parameters.cgo-enabled >>
      go111module: << parameters.go111module >>
      gopkg: << parameters.gopkg >>
    steps:
      - checkout
      - retry/install
      - mod-download
      - tools/mod-tidy-check
      - when:
          condition: << parameters.prepare-build >>
          steps:
            - run: << parameters.prepare-build >>
      - unless:
          condition: << parameters.no-install >>
          steps:
            - run: retry -m 3 make install
      - run: retry -m 3 make unittest
      - install_golangci-lint
      - run: PATH=$PATH:$(pwd)/bin retry -m 3 make lint
      - codecov/upload:
          file: coverage.txt
    parameters:
      tag:
        type: string
        default: '1.13'
        description: See https://hub.docker.com/r/circleci/golang/tags
      no-install:
        type: boolean
        default: false
        description: "if true, won't run 'make install'"
      cgo-enabled:
        type: string
        default: '1'
      go111module:
        type: enum
        enum: ["on", "off", "auto"]
        default: "on"
      gopkg:
        type: string
        description: "your go package, i.e. moul.io/build or github.com/moul/build"
      prepare-build:
        type: string
        default: ''
        description: 'if set, this command will be run before running install and test commands'
  docker-build:
    executor:
      name: docker
      tag: << parameters.tag >>
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - docker/build:
          image: << parameters.image >>
      #- docker/dockerlint
    parameters:
      image:
        type: string
        default: 'tmp'
      tag:
        type: string
        default: 18.06.3-ce-git
        description: "See https://hub.docker.com/_/docker?tab=tags"
  # internal
  test-circleci-node:
    docker:
      - image: circleci/node
    steps: ["test"]

  test-circleci-golang-latest:
    executor:
      name: golang
      gopkg: moul.io/build
    steps: ["test"]
  test-circleci-golang-113:
    executor:
      name: golang
      gopkg: moul.io/build
      tag: "1.13"
    steps: ["test"]
  test-circleci-golang-112:
    executor:
      name: golang
      gopkg: moul.io/build
      tag: "1.12"
    steps: ["test"]
  test-circleci-golang-111:
    executor:
      name: golang
      gopkg: moul.io/build
      tag: "1.11"
    steps: ["test"]
  test-docker:
    executor: docker
    steps: ["test"]
  test-circleci-python:
    docker:
      - image: circleci/python
    steps: ["test"]
  test-alpine:
    docker:
      - image: alpine
    steps:
      - test:
          insecure: true

orbs:
  dl: moul/dl@1.7.0
  retry: moul/retry@0.6.0
  codecov: codecov/codecov@1.0.5
  docker: circleci/docker@0.5.13
  tools: gotest/tools@0.0.10

workflows:
  main:
    jobs:
      - test-circleci-node
      - test-circleci-golang-112
      - test-circleci-golang-111
      - test-docker
      - test-circleci-python
      - test-alpine
