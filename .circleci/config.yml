version: 2.1

commands:
  install_golangci-lint:
    description: "Install golangci-lint"
    parameters:
      version:
        type: string
        default: "v1.15.0"
      sudo:
        type: boolean
        default: false
      insecure:
        type: boolean
        default: false
    steps:
      - retry/install:
          sudo: << parameters.sudo >>
          insecure: << parameters.insecure >>
      - run:
          name: "Installing golangci-lint"
          command: |
            . ~/.profile
            command -v golangci-lint ^>/dev/null || (
              cd
              dl --insecure="<< parameters.insecure >>" -o - https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | retry -m 3 sh -s << parameters.version >>
              echo "export PATH=~/bin:$PATH" >> $BASH_ENV
            )
            PATH=${HOME}/bin golangci-lint --version

  install_curl:
    description: "Install curl (if missing)"
    steps:
      - run:
          name: installing curl
          command: |
            command -v curl &>/dev/null || (
              apk add --no-cache curl || (apt update && apt install curl)
            )
            curl --version

  test:
    description: "Internal: testing the orb."
    parameters:
      sudo:
        type: boolean
        default: false
      insecure:
        type: boolean
        default: false
    steps:
      - install_golangci-lint:
          sudo: << parameters.sudo >>
          insecure: << parameters.insecure >>
      - run: retry --version
      - run: . ~/.profile && golangci-lint --version

executors:
  golang:
    docker:
      - image: circleci/golang:<< parameters.tag >>
    working_directory: << parameters.working_directory >>
    environment:
      - CGO_ENABLED: << parameters.cgo-enabled >>
      - GO111MODULE: << parameters.go111module >>
    parameters:
      tag:
        type: string
        default: '1.12'
        description: See https://hub.docker.com/r/circleci/golang/tags
      cgo-enabled:
        type: string
        default: '0'
      go111module:
        type: string
        default: "on"
        description: '"on", "off", or "auto"'
      working_directory:
        type: string
        default: "/workspace"
  docker:
    docker:
      - image: docker:<< parameters.tag >>
    parameters:
      tag:
        type: string
        default: 18.06.3-ce-git
        description: "See https://hub.docker.com/_/docker?tab=tags"

jobs:
  # exposed
  golang-binary:
    executor:
      name: golang
      tag: << parameters.tag >>
      cgo-enabled: << parameters.cgo-enabled >>
      go111module: << parameters.go111module >>
      working_directory: << parameters.working_directory >>
    steps:
      - checkout
      - retry/install
      - tools/mod-download
      - tools/mod-tidy-check
      - run: retry -m make install
      - run: retry -m make unittest
      - install_golangci-lint
      - run: PATH=$PATH:$(pwd)/bin retry -m 3 make lint
      - codecov/upload:
          file: coverage.txt
    parameters:
      tag:
        type: string
        default: '1.12'
        description: See https://hub.docker.com/r/circleci/golang/tags
      cgo-enabled:
        type: string
        default: '0'
      go111module:
        type: string
        default: "on"
        description: '"on", "off", or "auto"'
      working_directory:
        type: string
        default: "/workspace"
  golang-library:
    executor:
      name: golang
      tag: << parameters.tag >>
      cgo-enabled: << parameters.cgo-enabled >>
      go111module: << parameters.go111module >>
      working_directory: << parameters.working_directory >>
    steps:
      - checkout
      - retry/install
      - tools/mod-download
      - tools/mod-tidy-check
      - run: retry -m make unittest
      - install_golangci-lint
      - run: PATH=$PATH:$(pwd)/bin retry -m 3 make lint
      - codecov/upload:
          file: coverage.txt
    parameters:
      tag:
        type: string
        default: '1.12'
        description: See https://hub.docker.com/r/circleci/golang/tags
      cgo-enabled:
        type: string
        default: '0'
      go111module:
        type: string
        default: "on"
        description: '"on", "off", or "auto"'
      working_directory:
        type: string
        default: "/workspace"
  docker-build:
    executor:
      name: docker
      tag: << parameters.tag >>
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - docker/build:
          image: << parameters.image >>
      #- docker/dockerlint
    parameters:
      image:
        type: string
      tag:
        type: string
        default: 18.06.3-ce-git
        description: "See https://hub.docker.com/_/docker?tab=tags"
  # internal
  test-circleci-node:
    docker:
      - image: circleci/node
    steps: ["test"]
  test-circleci-golang-112:
    executor: golang
    steps: ["test"]
  test-circleci-golang-111:
    executor:
      name: golang
      tag: "1.11"
    steps: ["test"]
  test-docker:
    executor: docker
    steps: ["test"]
  test-circleci-python:
    docker:
      - image: circleci/python
    steps: ["test"]
  test-alpine:
    docker:
      - image: alpine
    steps:
      - test:
          insecure: true


orbs:
  dl: moul/dl@1.7.0
  retry: moul/retry@0.6.0
  codecov: codecov/codecov@1.0.5
  docker: circleci/docker@0.5.13
  tools: gotest/tools@0.0.10

workflows:
  main:
    jobs:
      - test-circleci-node
      - test-circleci-golang-112
      - test-circleci-golang-111
      - test-docker
      - test-circleci-python
      - test-alpine
